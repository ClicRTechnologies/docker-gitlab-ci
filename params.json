{"name":"Docker GitLab CI","tagline":"GitLab CI dockerized","body":"# Zero to GitLab CI in 5 seconds or less*\r\n\r\nThe quickest way to get started is using [docker-compose](https://docs.docker.com/compose/).\r\n\r\n```bash\r\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab-ci/master/docker-compose.yml\r\ndocker-compose up\r\n```\r\n\r\nAlternately, you can manually launch the `gitlab-ci` container and the supporting `postgresql` and `redis` containers by following three step guide.\r\n\r\nStep 1. Launch a postgresql container\r\n\r\n```bash\r\ndocker run --name=postgresql-gitlab-ci -d \\\r\n  --env='DB_NAME=gitlabhq_production' \\\r\n  --env='DB_USER=gitlab' --env='DB_PASS=password' \\\r\n  --volume=/srv/docker/gitlab-ci/postgresql:/var/lib/postgresql \\\r\n  sameersbn/postgresql:9.4\r\n```\r\n\r\nStep 2. Launch a redis container\r\n\r\n```bash\r\ndocker run --name=redis-gitlab-ci -d \\\r\n  --volume=/srv/docker/gitlab-ci/redis:/var/lib/redis \\\r\n  sameersbn/redis:latest\r\n```\r\n\r\nStep 3. Launch the gitlab-ci container\r\n\r\n```bash\r\ndocker run --name=gitlab-ci -d \\\r\n  --link=postgresql-gitlab-ci:postgresql --link=redis-gitlab-ci:redisio \\\r\n  --publish=10081:80 \\\r\n  --env='GITLAB_CI_PORT=10081' --env='GITLAB_URL=http://localhost:10080' \\\r\n  --env='GITLAB_APP_ID=xxx' --env='GITLAB_APP_SECRET=yyy' \\\r\n  --volume=/srv/docker/gitlab-ci/gitlab-ci:/home/gitlab_ci/data \\\r\n  sameersbn/gitlab-ci:7.10.4\r\n```\r\n\r\nPoint your browser to `http://localhost:10081` and login using your GitLab credentials.\r\n\r\nYou should now have the GitLab CI ready for testing. Please refer the [docs](https://github.com/sameersbn/docker-gitlab-ci/blob/master/README.md) for customization options.\r\n\r\n\\* *download and start up times not included*","google":"UA-48810494-4","note":"Don't delete this file! It's used internally to help with page regeneration."}